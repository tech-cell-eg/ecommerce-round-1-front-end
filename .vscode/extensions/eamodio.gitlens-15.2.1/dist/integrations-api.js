exports.id=773,exports.ids=[773],exports.modules={1574:(e,r,t)=>{t.r(r),t.d(r,{ProvidersApi:()=>ProvidersApi});var s=t(910),o=t.n(s),u=t(8803),n=t(3166),i=t(1298);let ProvidersApi=class ProvidersApi{constructor(e,r){this.container=e,this.authenticationService=r;let t=o()();this.providers={[i.Q7.GitHub]:{...i.Mt[i.Q7.GitHub],provider:t.github,getCurrentUserFn:t.github.getCurrentUser.bind(t.github),getPullRequestsForReposFn:t.github.getPullRequestsForRepos.bind(t.github),getPullRequestsForUserFn:t.github.getPullRequestsAssociatedWithUser.bind(t.github),getIssuesForReposFn:t.github.getIssuesForRepos.bind(t.github)},[i.PY.GitHubEnterprise]:{...i.Mt[i.PY.GitHubEnterprise],provider:t.github,getCurrentUserFn:t.github.getCurrentUser.bind(t.github),getPullRequestsForReposFn:t.github.getPullRequestsForRepos.bind(t.github),getPullRequestsForUserFn:t.github.getPullRequestsAssociatedWithUser.bind(t.github),getIssuesForReposFn:t.github.getIssuesForRepos.bind(t.github)},[i.Q7.GitLab]:{...i.Mt[i.Q7.GitLab],provider:t.gitlab,getCurrentUserFn:t.gitlab.getCurrentUser.bind(t.gitlab),getPullRequestsForReposFn:t.gitlab.getPullRequestsForRepos.bind(t.gitlab),getPullRequestsForRepoFn:t.gitlab.getPullRequestsForRepo.bind(t.gitlab),getPullRequestsForUserFn:t.gitlab.getPullRequestsAssociatedWithUser.bind(t.gitlab),getIssuesForReposFn:t.gitlab.getIssuesForRepos.bind(t.gitlab),getIssuesForRepoFn:t.gitlab.getIssuesForRepo.bind(t.gitlab)},[i.PY.GitLabSelfHosted]:{...i.Mt[i.PY.GitLabSelfHosted],provider:t.gitlab,getCurrentUserFn:t.gitlab.getCurrentUser.bind(t.gitlab),getPullRequestsForReposFn:t.gitlab.getPullRequestsForRepos.bind(t.gitlab),getPullRequestsForRepoFn:t.gitlab.getPullRequestsForRepo.bind(t.gitlab),getPullRequestsForUserFn:t.gitlab.getPullRequestsAssociatedWithUser.bind(t.gitlab),getIssuesForReposFn:t.gitlab.getIssuesForRepos.bind(t.gitlab),getIssuesForRepoFn:t.gitlab.getIssuesForRepo.bind(t.gitlab)},[i.Q7.Bitbucket]:{...i.Mt[i.Q7.Bitbucket],provider:t.bitbucket,getCurrentUserFn:t.bitbucket.getCurrentUser.bind(t.bitbucket),getPullRequestsForReposFn:t.bitbucket.getPullRequestsForRepos.bind(t.bitbucket),getPullRequestsForUserFn:t.bitbucket.getPullRequestsForUser.bind(t.bitbucket),getPullRequestsForRepoFn:t.bitbucket.getPullRequestsForRepo.bind(t.bitbucket)},[i.Q7.AzureDevOps]:{...i.Mt[i.Q7.AzureDevOps],provider:t.azureDevOps,getCurrentUserFn:t.azureDevOps.getCurrentUser.bind(t.azureDevOps),getCurrentUserForInstanceFn:t.azureDevOps.getCurrentUserForInstance.bind(t.azureDevOps),getAzureResourcesForUserFn:t.azureDevOps.getOrgsForUser.bind(t.azureDevOps),getAzureProjectsForResourceFn:t.azureDevOps.getAzureProjects.bind(t.azureDevOps),getPullRequestsForReposFn:t.azureDevOps.getPullRequestsForRepos.bind(t.azureDevOps),getPullRequestsForRepoFn:t.azureDevOps.getPullRequestsForRepo.bind(t.azureDevOps),getPullRequestsForAzureProjectsFn:t.azureDevOps.getPullRequestsForProjects.bind(t.azureDevOps),getIssuesForAzureProjectFn:t.azureDevOps.getIssuesForAzureProject.bind(t.azureDevOps),getReposForAzureProjectFn:t.azureDevOps.getReposForAzureProject.bind(t.azureDevOps)},[i.tp.Jira]:{...i.Mt[i.tp.Jira],provider:t.jira,getCurrentUserForResourceFn:t.jira.getCurrentUserForResource.bind(t.jira),getJiraResourcesForCurrentUserFn:t.jira.getJiraResourcesForCurrentUser.bind(t.jira),getJiraProjectsForResourcesFn:t.jira.getJiraProjectsForResources.bind(t.jira),getIssueFn:t.jira.getIssue.bind(t.jira),getIssuesForProjectFn:t.jira.getIssuesForProject.bind(t.jira),getIssuesForResourceForCurrentUserFn:t.jira.getIssuesForResourceForCurrentUser.bind(t.jira)},[i.tp.Trello]:{...i.Mt[i.tp.Trello],provider:t.trello}}}providers;getScopesForProvider(e){return this.providers[e]?.scopes}getProviderDomain(e){return this.providers[e]?.domain}getProviderPullRequestsPagingMode(e){return this.providers[e]?.pullRequestsPagingMode}getProviderIssuesPagingMode(e){return this.providers[e]?.issuesPagingMode}providerSupportsPullRequestFilters(e,r){return this.providers[e]?.supportedPullRequestFilters!=null&&r.every(r=>this.providers[e]?.supportedPullRequestFilters?.includes(r))}providerSupportsIssueFilters(e,r){return this.providers[e]?.supportedIssueFilters!=null&&r.every(r=>this.providers[e]?.supportedIssueFilters?.includes(r))}isRepoIdsInput(e){return null!=e&&Array.isArray(e)&&e.every(e=>"string"==typeof e||"number"==typeof e)}async getProviderToken(e,r){let t=null==e.domain||null==e.scopes?void 0:{domain:e.domain,scopes:e.scopes};try{let s=await this.authenticationService.get(e.id);return(await s.getSession(t,{createIfNeeded:r?.createSessionIfNeeded}))?.accessToken}catch{return}}getAzurePATForOAuthToken(e){return(0,n.K3)(`PAT:${e}`)}async ensureProviderTokenAndFunction(e,r,t){let s=this.providers[e];if(null==s)throw Error(`Provider with id ${e} not registered`);let o=t??await this.getProviderToken(s);if(null==o)throw Error(`Not connected to provider ${e}`);if(null==s[r])throw Error(`Provider with id ${e} does not support function: ${r}`);return{provider:s,token:o}}handleProviderError(e,r,t){if(null==this.providers[e])throw Error(`Provider with id ${e} not registered`);if(e===i.tp.Jira&&t?.response?.status!=null){if(401===t.response.status)throw new u.v3(e,u.R.Forbidden,t);if(429===t.response.status){let e;let s=t.response.headers?.["x-ratelimit-reset"];throw null!=s&&Number.isNaN(e=parseInt(s,10))&&(e=void 0),new u.qc(t,r,e)}if(t.response.status>=400&&t.response.status<500)throw new u.Iz(t)}throw t}async getPagedResult(e,r,t,s,o="{}",u=!1){let n;try{n=JSON.parse(o)}catch{n={}}let i=n.value,a=n.type,g={};"page"===a?g={page:i}:"cursor"===a&&(g={cursor:i});let l={...r,...g},F=await t?.(l,{token:s,isPAT:u});if(null==F)return{values:[]};let c=F.pageInfo?.hasNextPage??!1,d="{}";return F.pageInfo?.endCursor!=null?d=JSON.stringify({value:F.pageInfo?.endCursor,type:"cursor"}):F.pageInfo?.nextPage!=null&&(d=JSON.stringify({value:F.pageInfo?.nextPage,type:"page"})),{values:F.data,paging:{cursor:d,more:c}}}async getCurrentUser(e,r){let{provider:t,token:s}=await this.ensureProviderTokenAndFunction(e,"getCurrentUserFn",r?.accessToken);try{return(await t.getCurrentUserFn?.({},{token:s,isPAT:r?.isPAT}))?.data}catch(r){return this.handleProviderError(e,s,r)}}async getCurrentUserForInstance(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getCurrentUserForInstanceFn",t?.accessToken);return(await s.getCurrentUserForInstanceFn?.({namespace:r},{token:o,isPAT:t?.isPAT}))?.data}async getCurrentUserForResource(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getCurrentUserForResourceFn",t?.accessToken);try{return(await s.getCurrentUserForResourceFn?.({resourceId:r},{token:o}))?.data}catch(r){return this.handleProviderError(e,o,r)}}async getJiraResourcesForCurrentUser(e){let{provider:r,token:t}=await this.ensureProviderTokenAndFunction(i.tp.Jira,"getJiraResourcesForCurrentUserFn",e?.accessToken);try{return(await r.getJiraResourcesForCurrentUserFn?.({token:t}))?.data}catch(e){return this.handleProviderError(i.tp.Jira,t,e)}}async getAzureResourcesForUser(e,r){let{provider:t,token:s}=await this.ensureProviderTokenAndFunction(i.Q7.AzureDevOps,"getAzureResourcesForUserFn",r?.accessToken);try{return(await t.getAzureResourcesForUserFn?.({userId:e},{token:s}))?.data}catch(e){return this.handleProviderError(i.Q7.AzureDevOps,s,e)}}async getJiraProjectsForResources(e,r){let{provider:t,token:s}=await this.ensureProviderTokenAndFunction(i.tp.Jira,"getJiraProjectsForResourcesFn",r?.accessToken);try{return(await t.getJiraProjectsForResourcesFn?.({resourceIds:e},{token:s}))?.data}catch(e){return this.handleProviderError(i.tp.Jira,s,e)}}async getAzureProjectsForResource(e,r){let{provider:t,token:s}=await this.ensureProviderTokenAndFunction(i.Q7.AzureDevOps,"getAzureProjectsForResourceFn",r?.accessToken),o=r?.isPAT?s:this.getAzurePATForOAuthToken(s);try{return this.getPagedResult(t,{namespace:e,...r},t.getAzureProjectsForResourceFn,o,r?.cursor,!0)}catch(e){return this.handleProviderError(i.Q7.AzureDevOps,s,e)}}async getReposForAzureProject(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(i.Q7.AzureDevOps,"getReposForAzureProjectFn",t?.accessToken);return this.getPagedResult(s,{namespace:e,project:r,...t},s.getReposForAzureProjectFn,o,t?.cursor)}async getPullRequestsForRepos(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getPullRequestsForReposFn",t?.accessToken);return this.getPagedResult(s,{...this.isRepoIdsInput(r)?{repoIds:r}:{repos:r},...t},s.getPullRequestsForReposFn,o,t?.cursor)}async getPullRequestsForRepo(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getPullRequestsForRepoFn",t?.accessToken);return this.getPagedResult(s,{repo:r,...t},s.getPullRequestsForRepoFn,o,t?.cursor)}async getPullRequestsForUser(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getPullRequestsForUserFn",t?.accessToken);return this.getPagedResult(s,{...e===i.Q7.Bitbucket?{userId:r}:{username:r},...t},s.getPullRequestsForUserFn,o,t?.cursor)}async getPullRequestsForAzureProjects(e,r){let{provider:t,token:s}=await this.ensureProviderTokenAndFunction(i.Q7.AzureDevOps,"getPullRequestsForAzureProjectsFn",r?.accessToken),o=r?.isPAT?s:this.getAzurePATForOAuthToken(s);try{return(await t.getPullRequestsForAzureProjectsFn?.({projects:e,...r},{token:o,isPAT:!0}))?.data}catch(e){return this.handleProviderError(i.Q7.AzureDevOps,s,e)}}async getIssuesForRepos(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getIssuesForReposFn",t?.accessToken);return this.getPagedResult(s,{...this.isRepoIdsInput(r)?{repoIds:r}:{repos:r},...t},s.getIssuesForReposFn,o,t?.cursor)}async getIssuesForRepo(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getIssuesForRepoFn",t?.accessToken);return this.getPagedResult(s,{repo:r,...t},s.getIssuesForRepoFn,o,t?.cursor)}async getIssuesForAzureProject(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(i.Q7.AzureDevOps,"getIssuesForAzureProjectFn",t?.accessToken);return this.getPagedResult(s,{namespace:e,project:r,...t},s.getIssuesForAzureProjectFn,o,t?.cursor)}async getIssuesForProject(e,r,t,s){let{provider:o,token:u}=await this.ensureProviderTokenAndFunction(e,"getIssuesForProjectFn",s?.accessToken);try{let e=await o.getIssuesForProjectFn?.({project:r,resourceId:t,...s},{token:u});return e?.data}catch(r){return this.handleProviderError(e,u,r)}}async getIssuesForResourceForCurrentUser(e,r,t){let{provider:s,token:o}=await this.ensureProviderTokenAndFunction(e,"getIssuesForResourceForCurrentUserFn",t?.accessToken);try{let e=await s.getIssuesForResourceForCurrentUserFn?.({resourceId:r},{token:o});return e?.data}catch(r){return this.handleProviderError(e,o,r)}}async getIssue(e,r,t,s){let{provider:o,token:u}=await this.ensureProviderTokenAndFunction(e,"getIssueFn",s?.accessToken);try{let e=await o.getIssueFn?.({resourceId:r,number:t},{token:u});return e?.data}catch(r){return this.handleProviderError(e,u,r)}}}}};